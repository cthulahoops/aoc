rules = many_sep(tuple2_sep(number, "|", number) -> P $ [ P ] , nl)

page_updates = many_sep(number -> P $ [P], ",")
sequences = many_sep(page_updates -> P $ [P], nl)

Middle(Items) = Items -> [_, ...M, _] ? Middle(M) : ArrayFirst(Items)

IsInOrder(Pages, A, B)
        = Pages -> [A, ..._] ? True
        : Pages -> [B, ...Rest] ? Not(Contains(Rest, A))
        : Pages -> [_, ...Rest] ? IsInOrder(Rest, A, B)
        : Pages -> [] $ True

Contains(Items, A)
        = Items -> [A, ..._] ? True
        : Items -> [_, ...Rest] $ Contains(Rest, A)

Not(X) = X -> True ? False : True


TestPageList(Rules, PageList)
        = Rules -> [[A, B], ...RestRules]
        ? (IsTrue(IsInOrder(PageList, A, B)) & TestPageList(RestRules, PageList))
        : True

IsTrue(Item) = Item -> True

TestPages(Rules, Pages)
        = Pages -> [PageList, ...RestPages] ? ( TestPageList(Rules, PageList) ? Middle(PageList) : null ) + TestPages(Rules, RestPages)
        : null 

tuple2_sep(rules, nl & nl, sequences) -> [Rules, Pages] $ TestPages(Rules, Pages)
